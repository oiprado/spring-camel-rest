<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cxf="http://camel.apache.org/schema/cxf"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
            http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
            http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
            http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    
    <bean id="RestletComponent" class="org.restlet.Component" />

    <bean id="RestletComponentService" class="org.apache.camel.component.restlet.RestletComponent">
        <constructor-arg index="0">
            <ref bean="RestletComponent" />
        </constructor-arg>
    </bean>
    
    <camelContext xmlns="http://camel.apache.org/schema/spring">

        <restConfiguration component="restlet" enableCORS="true" >
            <corsHeaders key="Access-Control-Allow-Headers" value="Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"/>
            <corsHeaders key="Access-Control-Allow-Origin" value="*"/>
            <corsHeaders key="Access-Control-Allow-Methods" value="POST, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH"/>
            <!--<corsHeaders key="Access-Control-Max-Age" value="3600"/>-->
        </restConfiguration>

        <rest enableCORS="true">
            <post uri="/validate" bindingMode="auto" type="com.trinity.dev.gateway.dto.Image" enableCORS="true">
                <route trace="false" streamCache="true">
                    <doTry>
                        <setHeader headerName="CamelHttpMethod">
                            <constant>POST</constant>
                        </setHeader>
                        <setHeader headerName="Content-Type">
                            <constant>application/json</constant>
                        </setHeader>
                        <setHeader headerName="CamelHttpUri">
                            <constant>https://us-central1-risk-tensor-flow-258320.cloudfunctions.net/risk-tf</constant>
                        </setHeader>
                        <marshal>
                            <json library="Jackson" disableFeatures="FAIL_ON_EMPTY_BEANS"/>
                        </marshal>
                        <convertBodyTo type="java.lang.String"/>
                        <to uri="{{rest.ml.uri}}"/>
                        <unmarshal>
                            <json library="Jackson" unmarshalTypeName="com.trinity.dev.gateway.dto.MLResponse"/>
                        </unmarshal>
                        <log message="Out: ${body}"/>
                        <process ref="responseProcessor"/>
                        <unmarshal>
                            <json library="Jackson"/>
                        </unmarshal>
                        
                        <!--                        <transform>
                            <simple>${body}</simple>
                        </transform>-->
                        <!--<process ref="debugProcessor"/>-->
                        <!--<convertBodyTo type="java.lang.String"/>-->
                        <!--                        <setBody>
                            <simple>${body}</simple>
                        </setBody>-->
                        <doCatch>
                            <exception>java.lang.Exception</exception>
                            <log message="Error: ${exception}"/>
                        </doCatch>
                    </doTry>
                </route>
            </post>
        </rest>

    </camelContext>

</beans>